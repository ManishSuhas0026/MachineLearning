# -*- coding: utf-8 -*-
"""Ml_lab6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vlv8vaw7YgAsA5INjvnxGP_WcZEXBnu9
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score, explained_variance_score

df = pd.read_csv('/content/insurance.csv')

df.isnull().sum()

df.info

df.describe

df

df = pd.get_dummies(df, columns=['sex', 'smoker', 'region'], drop_first=True)

X = df.drop(columns=['charges'])
Y = df['charges']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, Y_train)

Y_pred = model.predict(X_test)

mae = mean_absolute_error(Y_test, Y_pred)
mse = mean_squared_error(Y_test, Y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(Y_test, Y_pred)
explained_var = explained_variance_score(Y_test, Y_pred)

rss = np.sum((Y_pred - Y_test)**2)
n = len(X_test)
p = X_test.shape[1]
adj_r2 = 1 - (1 - r2) * ((n - 1) / (n - p - 1))

print(f'Mean Absolute Error (MAE): {mae:.2f}')
print(f'Mean Squared Error (MSE): {mse:.2f}')
print(f'Root Mean Squared Error (RMSE): {rmse:.2f}')
print(f'R-squared (R2) Score: {r2:.2f}')
print(f'Adjusted R-squared Score: {adj_r2:.2f}')
print(f'Residual Sum of Squares (RSS): {rss:.2f}')
print(f'Explained Variance Score: {explained_var:.2f}')

feature_importance = model.coef_
feature_names = X.columns

feature_df = pd.DataFrame({'Feature': feature_names, 'Importance': feature_importance})

feature_df = feature_df.sort_values(by='Importance', ascending=False)

plt.figure(figsize=(10, 6))
sns.barplot(x='Importance', y='Feature', data=feature_df)
plt.title('Feature Importance')
plt.xlabel('Importance')
plt.ylabel('Feature')
plt.show()